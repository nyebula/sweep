// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Things to add/change
// - ctrl gui arrows
// - ctrl arrows
// - bootloader
// - reset
// - flux brightness
// - mouse buttons
// - alt to the left hand

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};



/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	    td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
                
       	default_layer {
			bindings = <
			&kp Q &kp W &kp F &kp P &kp B 									&kp J &kp L  &kp U  &kp Y  &kp BSPC
			&kp A &kp R &hm LALT S &hm LGUI T &kp G 			       		&kp M &hm RGUI N &hm RALT E &kp I &kp O
			&kp X &kp C &kp D &kp V &kp Z				        			&kp K &kp H  &td MINUS COMMA  &td EXCL DOT  &td UNDERSCORE SLASH
							&kp SPACE &sk LCTRL  							&sk LSHIFT &to 1
			>;
		};

       	left_layer {
			bindings = <
			&kp ESC  &kp AT   &kp LS(N3) &kp DLLR  &kp C_BRI_UP				&kp CARET &kp LS(COMMA) &kp LS(DOT) &kp CAPS &kp BSPC 
			&kp TAB  &kp EQUAL  &kp SEMI  &kp DQT    &kp SQT 				&kp BSLH &kp LBRC  &kp RBRC &kp PIPE  &kp ENTER
			&kp TILDE &kp GRAVE &kp PRCNT &kp DEL &kp C_BRI_DN 				&kp LBKT &kp LPAR &kp RPAR &kp RBKT  &to 3 
										&to 0  &sk LALT  					&sk LSHIFT &to 2 
			>;
		};
		
		right_layer {
			bindings = <
			&kp ESC  &kp C_PP &kp C_PREV  &kp C_NEXT  &kp LS(MINUS)    				&kp MINUS  &kp N7 &kp N8 &kp N9 &kp BSPC
			&kp TAB  &trans   &kp C_VOL_DN  &kp C_VOL_UP  &kp LS(EQUAL) 			&kp EQUAL &kp N4  &kp N5  &kp N6   &kp ENTER
			&to 4  &kp AMPS &kp SLASH &kp STAR &kp DOT    							&kp N0 &kp N1 &kp N2 &kp N3  &to 3 
												&to 0 &sk LALT  					&sk LGUI  &to 2 
			>;
		};
		
		tri_layer {
			bindings = <
			&trans &kp F1 &kp F2 &kp F3 &kp F10 						&kp LA(LS(TAB))   &kp LC(LS(TAB))   &kp RC(TAB) &kp LA(TAB) &kp LG(TAB)
			&sk LCTRL &kp F4 &kp F5 &kp F6 &kp F11  					&kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp ENTER 
			&sk LSHIFT &kp F7 &kp F8 &kp F9 &kp F12   					&kp HOME &kp PG_DN  &kp PG_UP &kp END  &trans   
									&to 0 &sk LGUI  					&sk RALT &to 1 
			>;
		};	
		bt {
			bindings = <
			&trans  &trans &bt BT_SEL 4 &trans &sys_reset 						&sys_reset &trans &trans &trans &trans 
			&bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bootloader 	&bootloader &trans &trans &trans &trans 
			&bt BT_PRV  &bt BT_NXT &bt BT_CLR &trans &trans   					&trans &trans &trans &trans &trans   
											&to 0 &trans  						&trans &to 1 
			>;
		};
        
	};
};
